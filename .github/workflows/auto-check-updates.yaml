name: check-upstream-and-update-pkg

on:
  workflow_dispatch:
  schedule:
  - cron: "10 10,22 * * *"

jobs:

  create-pkg-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - id: matrix
      run: |
        script=$(./utils/make-matrix.sh)
        echo "matrix=${script}" >> $GITHUB_OUTPUT

  check-upstream:
    needs: [ create-pkg-list]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.create-pkg-list.outputs.matrix) }}
    container:
      image: ghcr.io/brokenpip3/my-pkgbuilds:main
    steps:
      - uses: actions/checkout@v4

      - uses: oprypin/find-latest-tag@v1.1.2
        with:
          repository: ${{ matrix.repo }}
          sort-tags: true
        id: latest
        name: Check latest version

      - name: Version diff
        id: version
        env:
          LATEST: "${{ steps.latest.outputs.tag }}"
          CURRENT: "${{ matrix.ver }}"
        run: |
              result=$(vercmp "${CURRENT}"  "${LATEST//v}")
              [ "$result" -eq -1 ] && _result='true' || _result='false'
              echo "build=${_result}" >> $GITHUB_ENV

      - name: Update version and checksum
        if: env.build == 'true'
        working-directory: "packages/${{ matrix.pkg }}"
        shell: bash
        env:
          LATEST: "${{ steps.latest.outputs.tag }}"
        run: |
          # List of external site that does not need the v
          # in version
          removev=("https://files.pythonhosted.org")
          source PKGBUILD
          for v in "${removev[@]}"; do
            if [[ $source == $v* ]]; then
              LATEST="${LATEST//v}"
              break
            # In case of proper source we can have a
            # double "v" in version, so let's remove one
            elif [[ $source == *"v$pkgver"* ]]; then
              LATEST="${LATEST//v}"
              break
            fi
          done
          sed -i "s/pkgver=.*/pkgver=${LATEST}/" PKGBUILD
          updpkgsums

      - name: Build
        if: env.build == 'true'
        env:
          PKG: ${{ matrix.pkg }}
        working-directory: "packages/${{ matrix.pkg }}"
        shell: bash
        run: |
          set -x
          sudo pacman -Sy --noconfirm
          aur_depend="$(aur depends ${PKG} | awk -F ' ' '{print $2}' | { grep -v ${PKG} || true; })"
          if [[ $(echo ${aur_depend}|wc -w) -gt 0 ]]; then
            trizen -S ${aur_depend} --noedit --noconfirm
          fi
          makepkg -sc --noconfirm
          makepkg --printsrcinfo > .SRCINFO

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        if: env.build == 'true'
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            branch: update-${{ matrix.pkg }}
            delete-branch: true
            assignees: "brokenpip3"
            labels: "auto-pr-${{ matrix.pkg }}"
            commit-message: Update ${{ matrix.pkg }} to ${{ steps.latest.outputs.tag }}
            title: Update ${{ matrix.pkg }} to ${{ steps.latest.outputs.tag }}
            body: |
               Update ${{ matrix.pkg }} to ${{ steps.latest.outputs.tag }}
               Upstream repo https://github.com/${{ matrix.repo }}
